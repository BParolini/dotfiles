# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#     source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
# fi

ZSH_THEME=""

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    git
    dotenv
    fzf
    pipenv
    sdk
    zsh-syntax-highlighting
    zsh-autosuggestions
)

mkdir -p "$HOME/.zfunc"
fpath+=$HOME/.zfunc
fpath=($ZDOTDIR/external $fpath)
fpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src

source $ZSH/oh-my-zsh.sh

mkdir -p "$ZSH_CACHE_DIR/completions"

if [ -f "/opt/homebrew/bin/brew" ]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ ! -f ~/.config/zsh/.p10k.zsh ]] || source ~/.config/zsh/.p10k.zsh

# Load personal aliases
source "$ZDOTDIR/aliases.sh"

if [ $commands[sdk] ]
then
    source <(sdk env zsh)
fi

if [ $commands[npm] ]
then
    source <(npm completion)
fi

if [ $commands[pipenv] ]
then
    eval "$(_PIPENV_COMPLETE=zsh_source pipenv)"
fi

if [ $commands[poetry] ]
then
    poetry completions zsh > "$HOME/.zfunc/_poetry"
fi

if [ $commands[kubectl] ]
then
    source <(kubectl completion zsh)
fi

if [ $commands[helm] ]
then
    source <(helm completion zsh)
fi

if [ $commands[direnv] ]
then
    source <(direnv hook zsh)
fi

# Load completions
autoload -Uz compinit && compinit

export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# opam (OCaml) configuration
[[ ! -r "$HOME/.opam/opam-init/init.zsh" ]] || source "$HOME/.opam/opam-init/init.zsh" > /dev/null 2> /dev/null

# ghcup (Haskell) configuration
[ -f "$HOME/.ghcup/env" ] && source "$HOME/.ghcup/env" # ghcup-env

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

# zoxide configuration
if [ ! $commands[zoxide] ]; then
    curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash
fi
eval "$(zoxide init --cmd cd zsh)"

eval "$(fzf --zsh)"

eval "$(starship init zsh)"

# Sets development environment variables
source "$ZDOTDIR/dev_env.sh"
